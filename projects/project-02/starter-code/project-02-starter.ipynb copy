{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/1ZcRyrc.png\" style=\"float: left; margin: 15px; height: 80px\">\n",
    "\n",
    "# Project 2\n",
    "\n",
    "### Exploratory Data Analysis (EDA)\n",
    "\n",
    "---\n",
    "\n",
    "This project is focused on exploratory data analysis, oft referred to as EDA. EDA is an essential part of the data science analysis pipeline. Failure to perform EDA before modeling is almost guaranteed to lead to pitfalls and faulty conclusions. What you do in this project are good practices for all projects going forward, especially those beyond this class!\n",
    "\n",
    "---\n",
    "\n",
    "This lab includes a variety of plotting problems. Much of the plotting code will be left up to you to find either in the lecture notes, or if not there, online. There are massive amounts of code snippets either in documentation or sites like stackoverflow that have almost certainly done what you are trying to do.\n",
    "\n",
    "**Get used to using google for finding code!** You will be using it every single day as a data scientist, especially for visualization and plotting.\n",
    "\n",
    "#### Package imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy.stats as stats\n",
    "import csv\n",
    "import pandas as pd\n",
    "\n",
    "# this line tells jupyter notebook to put the plots in the notebook rather than saving them to file.\n",
    "%matplotlib inline\n",
    "\n",
    "# this line makes plots prettier on mac retina screens. If you don't have one it shouldn't do anything.\n",
    "%config InlineBackend.figure_format = 'retina'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 1. Load the `sat_scores.csv` dataset and describe it\n",
    "\n",
    "---\n",
    "\n",
    "You should replace the placeholder path to the `sat_scores.csv` dataset below with your specific path to the file.\n",
    "\n",
    "### 1.1 Load the file with the `csv` module and put in dictionary format.\n",
    "\n",
    "The dictionary format for data will be keys as the column names/headers, and values as the row values for that column.\n",
    "\n",
    "Toy example:\n",
    "```python\n",
    "data = {\n",
    "    'column1':[0,1,2,3],\n",
    "    'column2':['a','b','c','d']\n",
    "    }\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Math': [510.0, 513.0, 515.0, 505.0, 516.0, 499.0, 499.0, 506.0, 500.0, 501.0, 499.0, 510.0, 499.0, 489.0, 501.0, 488.0, 474.0, 526.0, 499.0, 527.0, 499.0, 515.0, 510.0, 517.0, 525.0, 515.0, 542.0, 439.0, 539.0, 512.0, 542.0, 553.0, 542.0, 589.0, 550.0, 545.0, 572.0, 589.0, 580.0, 554.0, 568.0, 561.0, 577.0, 562.0, 596.0, 550.0, 570.0, 603.0, 582.0, 599.0, 551.0, 514.0], 'State': ['CT', 'NJ', 'MA', 'NY', 'NH', 'RI', 'PA', 'VT', 'ME', 'VA', 'DE', 'MD', 'NC', 'GA', 'IN', 'SC', 'DC', 'OR', 'FL', 'WA', 'TX', 'HI', 'AK', 'CA', 'AZ', 'NV', 'CO', 'OH', 'MT', 'WV', 'ID', 'TN', 'NM', 'IL', 'KY', 'WY', 'MI', 'MN', 'KS', 'AL', 'NE', 'OK', 'MO', 'LA', 'WI', 'AR', 'UT', 'IA', 'SD', 'ND', 'MS', 'All'], 'Rate': [82.0, 81.0, 79.0, 77.0, 72.0, 71.0, 71.0, 69.0, 69.0, 68.0, 67.0, 65.0, 65.0, 63.0, 60.0, 57.0, 56.0, 55.0, 54.0, 53.0, 53.0, 52.0, 51.0, 51.0, 34.0, 33.0, 31.0, 26.0, 23.0, 18.0, 17.0, 13.0, 13.0, 12.0, 12.0, 11.0, 11.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 7.0, 6.0, 6.0, 5.0, 5.0, 4.0, 4.0, 4.0, 45.0], 'Verbal': [509.0, 499.0, 511.0, 495.0, 520.0, 501.0, 500.0, 511.0, 506.0, 510.0, 501.0, 508.0, 493.0, 491.0, 499.0, 486.0, 482.0, 526.0, 498.0, 527.0, 493.0, 485.0, 514.0, 498.0, 523.0, 509.0, 539.0, 534.0, 539.0, 527.0, 543.0, 562.0, 551.0, 576.0, 550.0, 547.0, 561.0, 580.0, 577.0, 559.0, 562.0, 567.0, 577.0, 564.0, 584.0, 562.0, 575.0, 593.0, 577.0, 592.0, 566.0, 506.0]}\n"
     ]
    }
   ],
   "source": [
    "sat_filepath = '/Users/katbishop/Desktop/DSI-SF2-bishopkd/datasets/state_sat_scores/sat_scores.csv'\n",
    "with open(sat_filepath, 'r') as f:\n",
    "    reader = csv.reader(f)\n",
    "    rows = [row for row in reader]\n",
    "    sat_dict = {key:[] for key in rows[0]}\n",
    "    \n",
    "    #floatify\n",
    "    rows = [[float(cell) if cell.isdigit() else cell for cell in row] for row in rows]\n",
    "    \n",
    "    #load into dict\n",
    "    for index, key in enumerate(rows[0]):\n",
    "        for row in rows[1:]:\n",
    "            sat_dict[key].append(row[index])\n",
    "            \n",
    "\n",
    "print sat_dict\n",
    "            \n",
    "      \n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2 Make a pandas DataFrame object with the sat dictionary and also with the pandas `.read_csv()` function\n",
    "\n",
    "Compare the DataFrames using the `.dtypes` attribute in the DataFrame objects. What is the difference between loading from file and inputting this dictionary (if any)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Rate</th>\n",
       "      <th>Verbal</th>\n",
       "      <th>Math</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CT</td>\n",
       "      <td>82</td>\n",
       "      <td>509</td>\n",
       "      <td>510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NJ</td>\n",
       "      <td>81</td>\n",
       "      <td>499</td>\n",
       "      <td>513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MA</td>\n",
       "      <td>79</td>\n",
       "      <td>511</td>\n",
       "      <td>515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NY</td>\n",
       "      <td>77</td>\n",
       "      <td>495</td>\n",
       "      <td>505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NH</td>\n",
       "      <td>72</td>\n",
       "      <td>520</td>\n",
       "      <td>516</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  State  Rate  Verbal  Math\n",
       "0    CT    82     509   510\n",
       "1    NJ    81     499   513\n",
       "2    MA    79     511   515\n",
       "3    NY    77     495   505\n",
       "4    NH    72     520   516"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/Users/katbishop/Desktop/DSI-SF2-bishopkd/datasets/state_sat_scores/sat_scores.csv')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Math</td>\n",
       "      <td>[510.0, 513.0, 515.0, 505.0, 516.0, 499.0, 499...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>State</td>\n",
       "      <td>[CT, NJ, MA, NY, NH, RI, PA, VT, ME, VA, DE, M...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Rate</td>\n",
       "      <td>[82.0, 81.0, 79.0, 77.0, 72.0, 71.0, 71.0, 69....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Verbal</td>\n",
       "      <td>[509.0, 499.0, 511.0, 495.0, 520.0, 501.0, 500...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        0                                                  1\n",
       "0    Math  [510.0, 513.0, 515.0, 505.0, 516.0, 499.0, 499...\n",
       "1   State  [CT, NJ, MA, NY, NH, RI, PA, VT, ME, VA, DE, M...\n",
       "2    Rate  [82.0, 81.0, 79.0, 77.0, 72.0, 71.0, 71.0, 69....\n",
       "3  Verbal  [509.0, 499.0, 511.0, 495.0, 520.0, 501.0, 500..."
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dict = pd.DataFrame(sat_dict.items())\n",
    "#df_dict = pd.melt(df_dict)\n",
    "#df_dict.pivot()\n",
    "df_dict\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you did not convert the string column values to float in your dictionary, the columns in the DataFrame are of type `object` (which are string values, essentially). "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3 Look at the first ten rows of the DataFrame and describe what the data appears to be. \n",
    "\n",
    "From now on, use the DataFrame loaded from the file using the `.read_csv()` function.\n",
    "\n",
    "Use the `.head(num)` built-in DataFrame function, where `num` is the number of rows to print out.\n",
    "\n",
    "You are not given a \"codebook\" with this data, so you will have to make some (very minor) inference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Rate</th>\n",
       "      <th>Verbal</th>\n",
       "      <th>Math</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CT</td>\n",
       "      <td>82</td>\n",
       "      <td>509</td>\n",
       "      <td>510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NJ</td>\n",
       "      <td>81</td>\n",
       "      <td>499</td>\n",
       "      <td>513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MA</td>\n",
       "      <td>79</td>\n",
       "      <td>511</td>\n",
       "      <td>515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NY</td>\n",
       "      <td>77</td>\n",
       "      <td>495</td>\n",
       "      <td>505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NH</td>\n",
       "      <td>72</td>\n",
       "      <td>520</td>\n",
       "      <td>516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>RI</td>\n",
       "      <td>71</td>\n",
       "      <td>501</td>\n",
       "      <td>499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PA</td>\n",
       "      <td>71</td>\n",
       "      <td>500</td>\n",
       "      <td>499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>VT</td>\n",
       "      <td>69</td>\n",
       "      <td>511</td>\n",
       "      <td>506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ME</td>\n",
       "      <td>69</td>\n",
       "      <td>506</td>\n",
       "      <td>500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>VA</td>\n",
       "      <td>68</td>\n",
       "      <td>510</td>\n",
       "      <td>501</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  State  Rate  Verbal  Math\n",
       "0    CT    82     509   510\n",
       "1    NJ    81     499   513\n",
       "2    MA    79     511   515\n",
       "3    NY    77     495   505\n",
       "4    NH    72     520   516\n",
       "5    RI    71     501   499\n",
       "6    PA    71     500   499\n",
       "7    VT    69     511   506\n",
       "8    ME    69     506   500\n",
       "9    VA    68     510   501"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)\n",
    "# Data appears to be the average Verbal and Math SAT scores by state\n",
    "# Rate ... not sure what Rate is -- participation rate?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 2. Create a \"data dictionary\" based on the data\n",
    "\n",
    "---\n",
    "\n",
    "A data dictionary is an object that describes your data. This should contain the name of each variable (column), the type of the variable, your description of what the variable is, and the shape (rows and columns) of the entire dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# State - 2 char string, abbreviation for state\n",
    "# Rate - float, percentage of eligible students who took the test (?)\n",
    "# Verbal - mean of verbal scores for all SATs in the given state\n",
    "# Math - mean of math scores for all SATs in the given state"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 3. Plot the data using seaborn\n",
    "\n",
    "---\n",
    "\n",
    "### 3.1 Using seaborn's `distplot`, plot the distributions for each of `Rate`, `Math`, and `Verbal`\n",
    "\n",
    "Set the keyword argument `kde=False`. This way you can actually see the counts within bins. You can adjust the number of bins to your liking. \n",
    "\n",
    "[Please read over the `distplot` documentation to learn about the arguments and fine-tune your chart if you want.](https://stanford.edu/~mwaskom/software/seaborn/generated/seaborn.distplot.html#seaborn.distplot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x119f18150>"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nERFNr/Owlik1W9fosmXLnJfp0P72fNvW46xlsrR1LfXp02ebp2HncrkYOHBgbNq0KVasWOGcTElr\n61pevnx58nayPieXTDi/+OKLTR9sXVVV1fTvkUceiYiIiy++OA4//PBYvnx5HHTQQfHpp582/cXs\n65YuXRpdunSJAw88MCIiDjrooIj46he7lo6NiBgwYMA39KjojHZkLb///vtN7wD4txoaGiIiYrfd\ndosIa5nsbd68Of7whz9s8+YbW319jTovU8p2ZC07L1Oq+vXrF127dt3uFbVNmzZFxFdXkp2TKWU7\nspZL6ZxcMq9xPuecc1p86/DXX389ampqYvTo0dG3b9/o2bNnDB48ON55552YO3dus8/GbWxsjPnz\n58ehhx7adBl+8ODB8fTTT8e7777b9B9zq3feeScqKytb/Jgg2FltXcuVlZUxbty4WLlyZbz55pvR\nq1evZsf//ve/j4iII444IiKsZbK3efPmuOCCC2KPPfaIt956q9lTqSIi5s2bF127do3DDz/ceZmS\ntiNr+cwzz3RepiSVl5fHEUccETU1NfHXv/612TsHb968OWpra6NXr16x3377OSdT0tqylr/1rW/F\nfvvtF+eff37JnJNL5orzqFGj4qqrrtrm31FHHRUREWeffXZceeWV0aNHjzjzzDOjS5cucffddzf7\nS9p9990X69ati7FjxzZtGzlyZOyxxx7x4IMPxueff960ffbs2bFkyZIYM2ZMdg+STqGta7mysjJO\nP/302LJlS9xxxx3NbuO3v/1tvPrqqzF06NA49NBDI8JaJnvl5eXxgx/8IL744ouYPn16s30PPfRQ\nfPjhh/HDH/7QeZmStyNr2XmZUnbeeedFPp+Pm2++uemqXMRX6/jjjz+OUaNGRS6Xc06m5LW2ln/0\nox9FLpcrqXNyLr+jL7zM2K233hqPPPJIVFdXx9ChQ5u233777fHggw/GwQcfHCeddFJ8+OGH8eqr\nr8aQIUPi3//936OsrKzp2McffzxuvPHG2H///eO0006Lurq6eOGFF+Kggw6Kxx9/fLtv1w+F1NJa\nrq+vj/PPPz8WLVoURx55ZBx77LGxePHiePXVV2PfffeNWbNmRd++fZtuw1oma8uWLYuxY8fGp59+\nGscdd1wMHDgw/vSnP8U777wT3/nOd2LmzJmx5557RoTzMqWtrWvZeZlSd9VVV/1/7d1LSNRbAMfx\n33hNHU2xFLJFFBk0lklhZUUjo73GB0Zhj0VhC8uoEIoo3Em1yFm0mqAW7ooiglr5GFN8jJASEUlM\nCVoQPQwJTcVKxv9diHLnjv1vXnMy/X52/s/5n/kfOBz9+T9zjurr65WcnCy73a6uri41Nzdr5cqV\nunfvnhYuXCiJORmz38+M5dk0J/9VXl5e/gv6PWP+ubx1/OBqSdq2bZsWL16sFy9eqKWlRV+/flVh\nYaEuXboUdNh7amqqkpOT5fP51NzcrM+fP8vpdKqiokKLFi0KdZcwT002liMjI7V37159//5dHR0d\nevz4sQYHB5WXl6dr164pKSkpoA3GMkItLi5O+fn5GhgY0NOnT9Xe3q7R0VEdPHhQV69eDfgFxLyM\n2exnxzLzMmY7p9OpuLg4+Xw+eb1eDQ0Nad++fXK5XMzJ+KP8zFieTXPyrH/jDAAAAADA7zRrvuMM\nAAAAAMBsRHAGAAAAAMAEwRkAAAAAABMEZwAAAAAATBCcAQAAAAAwQXAGAAAAAMAEwRkAAAAAABME\nZwAAAAAATBCcAQAAAAAwQXAGAAAAAMAEwRkAAAAAABMEZwAAAAAATBCcAQAAAAAwQXAGAGAGPXjw\nQDabTTabTXa7/T/rezyeifplZWX/+3PfvHmj4uJivX//PuC6zWZTamrq/24XAID5iOAMAEAIWCwW\n9fb26smTJ6b1qqqqJupPR0lJiVpbW6fVBgAAGENwBgAgBOLi4iRJtbW1P6wzPDyspqYmRURETPvz\nDMOYdhsAAGAMwRkAgBDYvn27IiIiVFdX98M6DQ0NGh4elt1uJ/gCADCLEJwBAAiB6OhoZWZmqqen\nR8+ePZu0TlVVlaKjo+VwOILK/H6/7t69q6NHjyojI0OpqanasmWLiouL5fV6J+q1t7fLZrPp7du3\nkqTs7GylpKQEtdff368rV67I4XAoLS1Nu3fvltvt1sjIyK/pMAAAcwjBGQCAEMnJyZFhGJMu1x4c\nHFRLS4uys7MVGRkZVH7q1CmVl5erq6tLGzZskMPhUGxsrLxer44fP66GhgZJUkJCggoKCmS1WiVJ\nu3btUkFBQUBbhmHo0KFDun//vlavXq1Nmzbp48ePcrvdunjx4gz0HACAPxvBGQCAEHE4HIqKipo0\nOD969EgjIyPKzc0NKqupqVFTU5PS09PV2NioGzduyO12q66uTkVFRTIMQ7dv35YkJScny+VyKTEx\nUZJUVlamioqKgPZGR0cVHh6u2tpa3bx5U5WVlbp165bCwsJUXV2tT58+zUDvAQD4cxGcAQAIkfHl\n2h8+fFBHR0dAWXV1tWJjYyc9smp0dFQ7duzQuXPngjYOO3DggCQFHTv1X8rKyrRkyZKJn9PS0pSe\nni5JevXq1ZTaAgBgriM4AwAQQk6nM2i59pcvX9Ta2qqdO3dqwYIFQffk5ubq+vXrE8FWGtuB+/nz\n56qpqZGkKX83ef369UHXkpKSJEkDAwNTagsAgLku/Hc/AAAA80lWVpaioqLk8Xh0/vx5SZLH45Hf\n71deXt4P7xsYGNCdO3fk9XrV3d2t3t5eSVJY2Nj/wKeyC3dYWJhiYmKCroeHj/1Z4Pf7f7otAADm\nA4IzAAAhZLValZmZqbq6Ovl8PqWkpKi6ulrx8fHaunXrpPd0dnaqqKhIfX19SkhI0Lp167Rq1Sqt\nWbNGy5cv1/79+6f0DBaL5Vd0BQCAeYPgDABAiOXk5Mjj8ai2tlZLly5VW1ubCgsLJ94e/9vly5fV\n19en06dP68yZMwFlnZ2doXhkAADmNYIzAAAhlpWVJavVKo/Ho2XLlsnv90+6m/a48Y3ESkpKgsrG\nz3D+91Jt3ioDAPDrsDkYAAAhFhUVpczMTHV3d6uyslKJiYnavHnzD+uPb9pVX18fcL2xsVFut1uS\n9O3bt4Cy8d232egLAIDpIzgDAPAb5OTkSJJev36tPXv2mNY9duyYJOns2bM6cuSISktLlZ+fr5Mn\nTyo+Pl4xMTHq7+8P2Fl7xYoVMgxDpaWlKi0t1dDQ0Iz1BQCAuY7gDADADLNYLEFLpx0Oh6xWqywW\ny6S7af/znsOHD8vlcmnt2rV6+fKlmpubZRiGTpw4oYcPHyojI0N+v18tLS0T91+4cEEbN25UT0+P\n2tra9O7du5ntJAAAc5jFmMr5FQAAAAAAzDO8cQYAAAAAwATBGQAAAAAAEwRnAAAAAABMEJwBAAAA\nADBBcAYAAAAAwATBGQAAAAAAEwRnAAAAAABMEJwBAAAAADBBcAYAAAAAwATBGQAAAAAAEwRnAAAA\nAABMEJwBAAAAADBBcAYAAAAAwATBGQAAAAAAEwRnAAAAAABMEJwBAAAAADBBcAYAAAAAwMTfXpeX\nFyMAES4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a65ee50>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 357,
       "width": 487
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "col = 'Math'\n",
    "sns.distplot(df[col], kde=False, bins=10, label=col)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 Using seaborn's `pairplot`, show the joint distributions for each of `Rate`, `Math`, and `Verbal`\n",
    "\n",
    "Explain what the visualization tells you about your data.\n",
    "\n",
    "[Please read over the `pairplot` documentation to fine-tune your chart.](https://stanford.edu/~mwaskom/software/seaborn/generated/seaborn.pairplot.html#seaborn.pairplot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x11c04bd50>"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nEw+SZLVaJUmVlZWSpIqKCoWGhnpMJWmsbLAwmST7xTqdrbioyIgwjRzcU4P6W/XuB/k6lv/NTid5\nJXbdmhgjB1+YAADQqZjMJg3sZ9Ok66NV+mWV11iBOAHwvUcWPqbSM+euup7+fXvq5V+v9kGLAP8J\nyERF/baimZmZmj59ulauXCnTvyZHpqen67nnntPKlSv10ksvqa6uzmviQZL7eE1NjSQ1W9blcqm6\nutrX3ekw9fNNrxzKaTablHbP9ZLkDkDio20NhnsCAIDgZjJJRz8/12ysQJwA+F7pmXOKTPje1deT\nvdkHrQH8KyATFWbzpaGFFotFy5YtcycpJGnu3Ll6/fXXtXfvXl28eFHh4eGqra31Wk99gqJ+Wkh4\neLjOnj3baFmTyeSxyGZb9O1rvarX+/KaX5RVNjrf9JWMj7Vo9hgdyy+X2WzS2NH91KtXd380t1U6\n4n76E/0LbMHeP38w0j2kLd7RFu+M0parbUdLYoWcgnMtihOMck+CWbDf487Wvy4hlkZKtk6XEEuH\n37uOvn57C/b+dYSAnExYPw0jNjZWNpvN45zJZNLIkSNVV1enkpIS2Wy2Rqdr1B+vr89ms6m6utpr\nYuPKssHg0PGyRr/9cDpdKiy7oIH9rFo2f7yie19dggYAAASelsQKzz5wI3ECAMCnAnJExcCBA2Wx\nWBodKVFXVyfp0kiJuLg4ZWZmqqampsG0jsLCQpnNZg0ePFiSFBcXp8OHD6uoqEhxcXENykpSfHz8\nVbX9zBn/rXHx/7N37/FRlfe+x78zkxtJZhJCIFcggRDQQhoIYr00Gz3sakrtAdm2iFi2ZVd6ymmB\nouKlp69j7bbbntPKtrZeNrqt0FJ2qex2U/GGiGerWyFcFQhBEiFXCCGZJEguM+v8EWfMZWYyyUyS\nmeTzfr18tcw8s+ZZk2etZ63fep7n54rsefrOyEiLPq5s9Pn5cw2XtOab+ao836yK2qaQypPua99G\nAvYvvA31/o3kKH4otJFQaq/UxTPq4l89TKbO7B2HSs+rrMqu7HSb8qeN99q/+3OtUNd4Sdkpk9Vw\n8VK/6jJcRvL5UgqN33gwhFIbGgze9q+jPTiLvnS0O4bttxutf7uRYjjPmWE5oiIqKkozZ85UdXW1\nzp492+09h8OhEydOKDExUSkpKSooKJDT6XSnHnVpa2vT4cOHlZOT457OUVBQIMMwtG/fvl7f+cEH\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11c062910>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 530,
       "width": 533
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 4. Plot the data using built-in pandas functions.\n",
    "\n",
    "---\n",
    "\n",
    "Pandas is very powerful and contains a variety of nice, built in plotting functions for your data. Read the documentation here to overview and understand the capabilities:\n",
    "\n",
    "http://pandas.pydata.org/pandas-docs/stable/visualization.html\n",
    "\n",
    "### 4.1 Plot a stacked histogram with `Verbal` and `Math` using pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2 Plot `Verbal` and `Math` on the same chart using boxplots\n",
    "\n",
    "What are the benefits of using a boxplot as compared to a scatterplot or a histogram?\n",
    "\n",
    "What's wrong with plotting a box-plot of `Rate` on the same chart as `Math` and `Verbal`?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/xDpSobf.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "### 4.3 Plot `Verbal`, `Math`, and `Rate` appropriately on the same boxplot chart\n",
    "\n",
    "Think about how you might change the variables so that they would make sense on the same chart. Explain your rationale for the choices on the chart. You should strive to make the chart as intuitive as possible. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 5. Create and examine subsets of the data\n",
    "\n",
    "---\n",
    "\n",
    "For these questions you will practice **masking** in pandas. Recall that masking uses conditional statements to select portions of your DataFrame (through boolean operations under the hood.)\n",
    "\n",
    "Remember the distinction between DataFrame indexing functions in pandas:\n",
    "\n",
    "    .iloc[row, col] : row and column are specified by index, which are integers\n",
    "    .loc[row, col]  : row and column are specified by string \"labels\" (boolean arrays are allowed; useful for rows)\n",
    "    .ix[row, col]   : row and column indexers can be a mix of labels and integer indices\n",
    "    \n",
    "For detailed reference and tutorial make sure to read over the pandas documentation:\n",
    "\n",
    "http://pandas.pydata.org/pandas-docs/stable/indexing.html\n",
    "\n",
    "\n",
    "\n",
    "### 5.1 Find the list of states that have `Verbal` scores greater than the average of `Verbal` scores across states\n",
    "\n",
    "How many states are above the mean? What does this tell you about the distribution of `Verbal` scores?\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.2 Find the list of states that have `Verbal` scores greater than the median of `Verbal` scores across states\n",
    "\n",
    "How does this compare to the list of states greater than the mean of `Verbal` scores? Why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.3 Create a column that is the difference between the `Verbal` and `Math` scores\n",
    "\n",
    "Specifically, this should be `Verbal - Math`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.4 Create two new DataFrames showing states with the greatest difference between scores\n",
    "\n",
    "1. Your first DataFrame should be the 10 states with the greatest gap between `Verbal` and `Math` scores where `Verbal` is greater than `Math`. It should be sorted appropriately to show the ranking of states.\n",
    "2. Your second DataFrame will be the inverse: states with the greatest gap between `Verbal` and `Math` such that `Math` is greater than `Verbal`. Again, this should be sorted appropriately to show rank.\n",
    "3. Print the header of both variables, only showing the top 3 states in each."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 6. Examine summary statistics\n",
    "\n",
    "---\n",
    "\n",
    "Checking the summary statistics for data is an essential step in the EDA process!\n",
    "\n",
    "### 6.1 Create the correlation matrix of your variables (excluding `State`).\n",
    "\n",
    "What does the correlation matrix tell you?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 6.2 Use pandas'  `.describe()` built-in function on your DataFrame\n",
    "\n",
    "Write up what each of the rows returned by the function indicate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/xDpSobf.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "### 6.3 Assign and print the _covariance_ matrix for the dataset\n",
    "\n",
    "1. Describe how the covariance matrix is different from the correlation matrix.\n",
    "2. What is the process to convert the covariance into the correlation?\n",
    "3. Why is the correlation matrix preferred to the covariance matrix for examining relationships in your data?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/l5NasQj.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 7. Performing EDA on \"drug use by age\" data.\n",
    "\n",
    "---\n",
    "\n",
    "You will now switch datasets. The drug use dataset has many more variables than the sat dataset. The process for this dataset is more open-ended than the sat dataset.\n",
    "\n",
    "You should use the techniques you applied above to practice more self-guided EDA here!\n",
    "\n",
    "### 7.1\n",
    "\n",
    "Load the data using pandas. Does this data require cleaning? Are variables missing? How will this affect your approach to EDA on the data?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "drug_data_filepath = '/Users/katbishop/Desktop/DSI-SF2-bishopkd/datasets/drug_use_by_age/drug-use-by-age.csv'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 7.2 Do a high-level, initial overview of the data\n",
    "\n",
    " and take a look at the column variables. Get a feel for what this dataset is all about. The code you use to do this is \"up to you\", as in you will apply processes you have learned above.\n",
    "\n",
    "The final response to this question should be a written description of what you deduce and infer the dataset to describe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 7.3 Create a testable hypothesis about this data\n",
    "\n",
    "Requirements for the question:\n",
    "\n",
    "1. Write a specific question you would like to answer with the data (that can be accomplished with EDA).\n",
    "2. Write a description of the \"deliverables\": what will you report after testing/examining your hypothesis?\n",
    "3. Use EDA techniques of your choice, numeric and/or visual, to look into your question.\n",
    "4. Write up your report on what you have found regarding the hypothesis about the data you came up with.\n",
    "\n",
    "\n",
    "**Important notes:**\n",
    "\n",
    "You should be only doing EDA _relevant to your question_ here. It is easy to go down rabbit holes trying to look at every facet of your data, and so we want you to get in the practice of specifying a hypothesis you are interested in first and scoping your work to specifically answer that question.\n",
    "\n",
    "Some of you may want to jump ahead to \"modeling\" data to answer your question. This is a topic addressed in the next project and **you should not do this for this project.** We specifically want you to not do modeling to emphasize the importance of performing EDA _before_ you jump to statistical analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/GCAf1UX.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 9. Covariance and correlation\n",
    "\n",
    "---\n",
    "\n",
    "### 9.1 Return to the sat dataset\n",
    "\n",
    "**Go back to the sat dataset.**\n",
    "\n",
    "1. Create the covariance matrix for the non-State variables. There are pandas and numpy functions that can do this.\n",
    "2. What is the difference between the covariance and correlation matrix?\n",
    "3. Why is the correlation matrix preferred to the covariance matrix for EDA?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/gGrau8s.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "### 9.2 Deeper into covariance and correlation\n",
    "\n",
    "1. How is the covariance matrix calculated?\n",
    "2. How is the correlation matrix calculated?\n",
    "3. Based on the explicit formulas, what is the primary differences between the two? \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/gGrau8s.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "### 9.3 Manual calculation of the covariance and correlation\n",
    "\n",
    "Create two functions that accept a matrix/DataFrame of numeric columns.\n",
    "\n",
    "1. Write a function that manually calculates the covariance matrix.\n",
    "2. Write a function that manually calculates the correlation matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/GCAf1UX.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "## 9. Introduction to dealing with outliers\n",
    "\n",
    "---\n",
    "\n",
    "Outliers are an interesting problem in statistics, in that there is not an agreed upon best way to define them. Subjectivity in selecting and analyzing data is a problem that will recur throughout the course.\n",
    "\n",
    "1. Pull out the rate variable from the sat dataset.\n",
    "2. Are there outliers in the dataset? Define, in words, how you _numerically define outliers._\n",
    "3. Print out the outliers in the dataset.\n",
    "4. Remove the outliers from the dataset.\n",
    "5. Compare the mean, median, and standard deviation of the \"cleaned\" data without outliers to the original. What is different about them and why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"http://imgur.com/gGrau8s.png\" style=\"float: left; margin: 25px 15px 0px 0px; height: 25px\">\n",
    "\n",
    "### 10. Percentile scoring and spearman rank correlation\n",
    "\n",
    "---\n",
    "\n",
    "### 10.1 Calculate the spearman correlation of sat `Verbal` and `Math`\n",
    "\n",
    "1. How does the spearman correlation compare to the pearson correlation? \n",
    "2. Describe clearly in words the process of calculating the spearman rank correlation.\n",
    "  - Hint: the word \"rank\" is in the name of the process for a reason!\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 10.2 Percentile scoring\n",
    "\n",
    "Look up percentile scoring of data. In other words, the conversion of numeric data to their equivalent percentile scores.\n",
    "\n",
    "http://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.percentile.html\n",
    "\n",
    "http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.percentileofscore.html\n",
    "\n",
    "1. Convert `Rate` to percentiles in the sat scores as a new column.\n",
    "2. Show the percentile of California in `Rate`.\n",
    "3. How is percentile related to the spearman rank correlation?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 10.3 Percentiles and outliers\n",
    "\n",
    "1. Why might percentile scoring be useful for dealing with outliers?\n",
    "2. Plot the distribution of a variable of your choice from the drug use dataset.\n",
    "3. Plot the same variable but percentile scored.\n",
    "4. Describe the effect, visually, of coverting raw scores to percentile."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [dsi]",
   "language": "python",
   "name": "Python [dsi]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
